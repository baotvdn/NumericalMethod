clear; clc;
syms x y
guess = [1.5;3.5]
f(x,y) = [x^2+x*y-10;y+3*x*y^2-57]
J(x,y) = jacobian(f, [x;y])
test = guess - J(guess(1),guess(2))\f(guess(1),guess(2))

function [x0,fx,ea,iter]=newtmult(func,x_guess,es,maxit,varargin)
if nargin<2,error('at least 2 input arguments required'),end
if nargin<3|isempty(es),es=0.0001;end
if nargin<4|isempty(maxit),maxit=50;end
iter = 0;
x0=x_guess;
f(x,y) = func
J(x,y) = jacobian(f, [x;y])
%while (1)
  f_recent = f(x(1),x(2));
  J_recent = J(x(1),x(2));
  dx=J_recent\f_recent;
  x0=x0-dx;
  iter = iter + 1;
  ea=100*max(abs(dx./x));
%  if iter>=maxit||ea<=es, break, end
%end
fx = f_recent
